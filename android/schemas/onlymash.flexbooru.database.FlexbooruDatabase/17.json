{
  "formatVersion": 1,
  "database": {
    "version": 17,
    "identityHash": "96ed4cd7d66102923fc4f669d87eb98b",
    "entities": [
      {
        "tableName": "posts_moebooru",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`indexInResponse` INTEGER NOT NULL, `uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `scheme` TEXT NOT NULL, `host` TEXT NOT NULL, `keyword` TEXT NOT NULL, `id` INTEGER NOT NULL, `tags` TEXT, `created_at` INTEGER NOT NULL, `creator_id` INTEGER NOT NULL, `author` TEXT NOT NULL, `change` INTEGER NOT NULL, `source` TEXT, `score` INTEGER NOT NULL, `md5` TEXT NOT NULL, `file_size` INTEGER NOT NULL, `file_url` TEXT, `file_ext` TEXT, `is_shown_in_index` INTEGER NOT NULL, `preview_url` TEXT NOT NULL, `preview_width` INTEGER NOT NULL, `preview_height` INTEGER NOT NULL, `actual_preview_width` INTEGER NOT NULL, `actual_preview_height` INTEGER NOT NULL, `sample_url` TEXT, `sample_width` INTEGER NOT NULL, `sample_height` INTEGER NOT NULL, `sample_file_size` INTEGER NOT NULL, `jpeg_url` TEXT, `jpeg_width` INTEGER NOT NULL, `jpeg_height` INTEGER NOT NULL, `jpeg_file_size` INTEGER NOT NULL, `rating` TEXT NOT NULL, `has_children` INTEGER NOT NULL, `parent_id` INTEGER, `status` TEXT NOT NULL, `width` INTEGER NOT NULL, `height` INTEGER NOT NULL, `is_held` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "indexInResponse",
            "columnName": "indexInResponse",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheme",
            "columnName": "scheme",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "host",
            "columnName": "host",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyword",
            "columnName": "keyword",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creator_id",
            "columnName": "creator_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "change",
            "columnName": "change",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "md5",
            "columnName": "md5",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "file_size",
            "columnName": "file_size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "file_url",
            "columnName": "file_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "file_ext",
            "columnName": "file_ext",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "is_shown_in_index",
            "columnName": "is_shown_in_index",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preview_url",
            "columnName": "preview_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "preview_width",
            "columnName": "preview_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preview_height",
            "columnName": "preview_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actual_preview_width",
            "columnName": "actual_preview_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actual_preview_height",
            "columnName": "actual_preview_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sample_url",
            "columnName": "sample_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sample_width",
            "columnName": "sample_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sample_height",
            "columnName": "sample_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sample_file_size",
            "columnName": "sample_file_size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "jpeg_url",
            "columnName": "jpeg_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "jpeg_width",
            "columnName": "jpeg_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "jpeg_height",
            "columnName": "jpeg_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "jpeg_file_size",
            "columnName": "jpeg_file_size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "has_children",
            "columnName": "has_children",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parent_id",
            "columnName": "parent_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "width",
            "columnName": "width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "height",
            "columnName": "height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "is_held",
            "columnName": "is_held",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_posts_moebooru_host_keyword_id",
            "unique": true,
            "columnNames": [
              "host",
              "keyword",
              "id"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_posts_moebooru_host_keyword_id` ON `${TABLE_NAME}` (`host`, `keyword`, `id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "posts_danbooru",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`indexInResponse` INTEGER NOT NULL, `uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `scheme` TEXT NOT NULL, `host` TEXT NOT NULL, `keyword` TEXT NOT NULL, `id` INTEGER NOT NULL, `created_at` TEXT NOT NULL, `uploader_id` INTEGER NOT NULL, `score` INTEGER NOT NULL, `source` TEXT NOT NULL, `md5` TEXT, `last_comment_bumped_at` TEXT, `rating` TEXT NOT NULL, `image_width` INTEGER NOT NULL, `image_height` INTEGER NOT NULL, `tag_string` TEXT NOT NULL, `is_note_locked` INTEGER NOT NULL, `fav_count` INTEGER NOT NULL, `file_ext` TEXT, `last_noted_at` TEXT, `is_rating_locked` INTEGER NOT NULL, `parent_id` INTEGER, `has_children` INTEGER NOT NULL, `approver_id` INTEGER, `tag_count_general` INTEGER NOT NULL, `tag_count_artist` INTEGER NOT NULL, `tag_count_character` INTEGER NOT NULL, `tag_count_copyright` INTEGER NOT NULL, `file_size` INTEGER NOT NULL, `is_status_locked` INTEGER NOT NULL, `pool_string` TEXT, `up_score` INTEGER NOT NULL, `down_score` INTEGER NOT NULL, `is_pending` INTEGER NOT NULL, `is_flagged` INTEGER NOT NULL, `is_deleted` INTEGER NOT NULL, `tag_count` INTEGER NOT NULL, `updated_at` TEXT, `is_banned` INTEGER NOT NULL, `pixiv_id` INTEGER NOT NULL, `last_commented_at` TEXT, `has_active_children` INTEGER NOT NULL, `bit_flags` INTEGER NOT NULL, `tag_count_meta` INTEGER NOT NULL, `uploader_name` TEXT NOT NULL, `has_large` INTEGER NOT NULL, `has_visible_children` INTEGER NOT NULL, `children_ids` TEXT, `is_favorited` INTEGER NOT NULL, `tag_string_general` TEXT, `tag_string_character` TEXT, `tag_string_copyright` TEXT, `tag_string_artist` TEXT, `tag_string_meta` TEXT, `file_url` TEXT, `large_file_url` TEXT, `preview_file_url` TEXT)",
        "fields": [
          {
            "fieldPath": "indexInResponse",
            "columnName": "indexInResponse",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheme",
            "columnName": "scheme",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "host",
            "columnName": "host",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyword",
            "columnName": "keyword",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uploader_id",
            "columnName": "uploader_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "md5",
            "columnName": "md5",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "last_comment_bumped_at",
            "columnName": "last_comment_bumped_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "image_width",
            "columnName": "image_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image_height",
            "columnName": "image_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag_string",
            "columnName": "tag_string",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "is_note_locked",
            "columnName": "is_note_locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fav_count",
            "columnName": "fav_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "file_ext",
            "columnName": "file_ext",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "last_noted_at",
            "columnName": "last_noted_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "is_rating_locked",
            "columnName": "is_rating_locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parent_id",
            "columnName": "parent_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "has_children",
            "columnName": "has_children",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "approver_id",
            "columnName": "approver_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tag_count_general",
            "columnName": "tag_count_general",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag_count_artist",
            "columnName": "tag_count_artist",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag_count_character",
            "columnName": "tag_count_character",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag_count_copyright",
            "columnName": "tag_count_copyright",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "file_size",
            "columnName": "file_size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "is_status_locked",
            "columnName": "is_status_locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pool_string",
            "columnName": "pool_string",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "up_score",
            "columnName": "up_score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "down_score",
            "columnName": "down_score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "is_pending",
            "columnName": "is_pending",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "is_flagged",
            "columnName": "is_flagged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "is_deleted",
            "columnName": "is_deleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag_count",
            "columnName": "tag_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updated_at",
            "columnName": "updated_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "is_banned",
            "columnName": "is_banned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pixiv_id",
            "columnName": "pixiv_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "last_commented_at",
            "columnName": "last_commented_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "has_active_children",
            "columnName": "has_active_children",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bit_flags",
            "columnName": "bit_flags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag_count_meta",
            "columnName": "tag_count_meta",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uploader_name",
            "columnName": "uploader_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "has_large",
            "columnName": "has_large",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "has_visible_children",
            "columnName": "has_visible_children",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "children_ids",
            "columnName": "children_ids",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "is_favorited",
            "columnName": "is_favorited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag_string_general",
            "columnName": "tag_string_general",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tag_string_character",
            "columnName": "tag_string_character",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tag_string_copyright",
            "columnName": "tag_string_copyright",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tag_string_artist",
            "columnName": "tag_string_artist",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tag_string_meta",
            "columnName": "tag_string_meta",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "file_url",
            "columnName": "file_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "large_file_url",
            "columnName": "large_file_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "preview_file_url",
            "columnName": "preview_file_url",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_posts_danbooru_host_keyword_id",
            "unique": true,
            "columnNames": [
              "host",
              "keyword",
              "id"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_posts_danbooru_host_keyword_id` ON `${TABLE_NAME}` (`host`, `keyword`, `id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "posts_danbooru_one",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`indexInResponse` INTEGER NOT NULL, `uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `scheme` TEXT NOT NULL, `host` TEXT NOT NULL, `keyword` TEXT NOT NULL, `id` INTEGER NOT NULL, `status` TEXT NOT NULL, `creator_id` INTEGER NOT NULL, `preview_width` INTEGER NOT NULL, `source` TEXT, `author` TEXT NOT NULL, `width` INTEGER NOT NULL, `score` INTEGER NOT NULL, `preview_height` INTEGER NOT NULL, `has_comments` INTEGER NOT NULL, `sample_width` INTEGER NOT NULL, `has_children` INTEGER NOT NULL, `sample_url` TEXT, `file_url` TEXT, `parent_id` INTEGER, `sample_height` INTEGER NOT NULL, `md5` TEXT NOT NULL, `tags` TEXT NOT NULL, `change` INTEGER NOT NULL, `has_notes` INTEGER NOT NULL, `rating` TEXT NOT NULL, `height` INTEGER NOT NULL, `preview_url` TEXT NOT NULL, `file_size` INTEGER NOT NULL, `created_at` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "indexInResponse",
            "columnName": "indexInResponse",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheme",
            "columnName": "scheme",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "host",
            "columnName": "host",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyword",
            "columnName": "keyword",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "creator_id",
            "columnName": "creator_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preview_width",
            "columnName": "preview_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "width",
            "columnName": "width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preview_height",
            "columnName": "preview_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "has_comments",
            "columnName": "has_comments",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sample_width",
            "columnName": "sample_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "has_children",
            "columnName": "has_children",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sample_url",
            "columnName": "sample_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "file_url",
            "columnName": "file_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parent_id",
            "columnName": "parent_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "sample_height",
            "columnName": "sample_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "md5",
            "columnName": "md5",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "change",
            "columnName": "change",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "has_notes",
            "columnName": "has_notes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "height",
            "columnName": "height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preview_url",
            "columnName": "preview_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "file_size",
            "columnName": "file_size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_posts_danbooru_one_host_keyword_id",
            "unique": true,
            "columnNames": [
              "host",
              "keyword",
              "id"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_posts_danbooru_one_host_keyword_id` ON `${TABLE_NAME}` (`host`, `keyword`, `id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "boorus",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `scheme` TEXT NOT NULL, `host` TEXT NOT NULL, `hash_salt` TEXT NOT NULL, `type` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "scheme",
            "columnName": "scheme",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "host",
            "columnName": "host",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hash_salt",
            "columnName": "hash_salt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_boorus_scheme_host",
            "unique": true,
            "columnNames": [
              "scheme",
              "host"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_boorus_scheme_host` ON `${TABLE_NAME}` (`scheme`, `host`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `booru_uid` INTEGER NOT NULL, `name` TEXT NOT NULL, `id` INTEGER NOT NULL, `password_hash` TEXT, `api_key` TEXT, FOREIGN KEY(`booru_uid`) REFERENCES `boorus`(`uid`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "booru_uid",
            "columnName": "booru_uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "password_hash",
            "columnName": "password_hash",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "api_key",
            "columnName": "api_key",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_users_booru_uid",
            "unique": true,
            "columnNames": [
              "booru_uid"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_users_booru_uid` ON `${TABLE_NAME}` (`booru_uid`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "boorus",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "booru_uid"
            ],
            "referencedColumns": [
              "uid"
            ]
          }
        ]
      },
      {
        "tableName": "suggestions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `booru_uid` INTEGER NOT NULL, `keyword` TEXT NOT NULL, FOREIGN KEY(`booru_uid`) REFERENCES `boorus`(`uid`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "booru_uid",
            "columnName": "booru_uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keyword",
            "columnName": "keyword",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_suggestions_booru_uid_keyword",
            "unique": true,
            "columnNames": [
              "booru_uid",
              "keyword"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_suggestions_booru_uid_keyword` ON `${TABLE_NAME}` (`booru_uid`, `keyword`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "boorus",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "booru_uid"
            ],
            "referencedColumns": [
              "uid"
            ]
          }
        ]
      },
      {
        "tableName": "tags_filter",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `booru_uid` INTEGER NOT NULL, `name` TEXT NOT NULL, `type` INTEGER NOT NULL, FOREIGN KEY(`booru_uid`) REFERENCES `boorus`(`uid`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "booru_uid",
            "columnName": "booru_uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_tags_filter_booru_uid_name",
            "unique": true,
            "columnNames": [
              "booru_uid",
              "name"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_tags_filter_booru_uid_name` ON `${TABLE_NAME}` (`booru_uid`, `name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "boorus",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "booru_uid"
            ],
            "referencedColumns": [
              "uid"
            ]
          }
        ]
      },
      {
        "tableName": "muzei",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `booru_uid` INTEGER NOT NULL, `keyword` TEXT NOT NULL, FOREIGN KEY(`booru_uid`) REFERENCES `boorus`(`uid`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "booru_uid",
            "columnName": "booru_uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "keyword",
            "columnName": "keyword",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_muzei_booru_uid_keyword",
            "unique": true,
            "columnNames": [
              "booru_uid",
              "keyword"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_muzei_booru_uid_keyword` ON `${TABLE_NAME}` (`booru_uid`, `keyword`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "boorus",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "booru_uid"
            ],
            "referencedColumns": [
              "uid"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"96ed4cd7d66102923fc4f669d87eb98b\")"
    ]
  }
}